{"version":3,"file":"static/js/594.0183d8ef.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Form/Input.styled.jsx","components/Form/Input.jsx","components/PhoneBook/PhoneBook.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","redux/contacts/selectors.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Form/Form.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/Contact.styled.jsx","components/ContactsList/ContactsList.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","Message/Message.styled.jsx","Message/Message.jsx","components/PhoneBook/PhoneBook.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  justify-content: center;\n  align-items: center;\n  font-size: 40px;\n  position: relative;\n  z-index: 1;\n`;\n","import styled from '@emotion/styled';\nimport { transition } from 'helpers';\n\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n`;\n\nexport const Title = styled.div`\n  font-size: 18px;\n  font-weight: 300;\n`;\n\nexport const InputStyled = styled.input`\n  width: 100%;\n  font-size: 20px;\n  border: none;\n  padding: 12px 16px;\n  outline: none;\n  background-color: #f3f3f3;\n  box-shadow: inset 2px 2px 4px #dfdfdf, inset -2px -2px 4px #ffffff;\n  color: #000;\n  font-weight: 600;\n  border-radius: 5px;\n  ${transition('box-shadow')};\n\n  &:focus {\n    box-shadow: inset 4px 4px 4px #e2e2e2, inset -4px -4px 4px #f9f9f9;\n  }\n`;\n","import { PropTypes } from 'prop-types';\nimport { Label, Title, InputStyled } from './Input.styled';\n\nconst Input = props => {\n  const { type, name, value, onChange, pattern, title, required, label } =\n    props;\n\n  return (\n    <Label>\n      {label && <Title>{label}</Title>}\n      <InputStyled\n        type={type}\n        name={name}\n        value={value}\n        onChange={onChange}\n        pattern={pattern}\n        title={title}\n        required={required}\n      />\n    </Label>\n  );\n};\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  required: PropTypes.bool,\n  label: PropTypes.string,\n};\n\nexport default Input;\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants';\n\nexport const PhoneBookStyled = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  font-size: 40px;\n  gap: 40px;\n\n  @media screen and (max-width: ${mediaSizes.desktop}) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { transition } from 'helpers';\n\nexport const SectionContainer = styled.section`\n  width: 550px;\n  max-width: 100%;\n  height: auto;\n  box-shadow: 0px 0px 20px 10px rgba(255, 255, 255, 1);\n  background: linear-gradient(180deg, #ededed 0%, #ededed 100%);\n  border-radius: 12px;\n  padding: 1px;\n  backdrop-filter: blur(2px);\n  position: relative;\n  padding: 24px;\n  ${transition('height')}\n  min-height: 400px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    margin: -5px;\n    height: calc(100% + 10px);\n    width: calc(100% + 10px);\n    border: 1px solid #00000021;\n    border-radius: 16px;\n    z-index: -1;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: -0px;\n    right: 0px;\n    margin: -5px;\n    height: calc(100% + 10px);\n    width: calc(100% + 10px);\n    border-top: 10px solid #333;\n    border-radius: 13px;\n    z-index: -1;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 26px;\n  margin-bottom: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionContainer, Title } from './Section.styled';\n\nconst Section = ({ title, type, children }) => {\n  return (\n    <SectionContainer className={type || ''}>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionContainer>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectRequested = state => state.contacts.requested;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectDeleteLoading = state => state.contacts.deleteLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(filter.toLowerCase()) ||\n        number.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\nimport { mediaSizes } from 'constants/media';\nimport { ishidden, transition } from 'helpers';\n\nexport const ModalStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #00000091;\n  z-index: 3;\n  opacity: 1;\n  ${transition('visible')};\n  border-radius: 10px;\n\n  &.is-hidden {\n    ${ishidden};\n\n    & .inner {\n      transform: scale(0.7);\n      ${transition('transform')};\n    }\n  }\n\n  & .window {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    width: calc(${mediaSizes.mobile} - 24px * 2);\n    max-width: calc(100% - 24px * 2);\n    transform: translateX(-50%) translateY(-50%);\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: ${mediaSizes.mobile};\n      max-width: ${mediaSizes.mobile};\n    }\n  }\n\n  & .inner {\n    transform: scale(1);\n    border-radius: 10px;\n    box-shadow: 10px 10px 30px 10px #00000044;\n    ${transition('transform')};\n    overflow: hidden;\n  }\n\n  & .close {\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    top: 14px;\n    right: 14px;\n    cursor: pointer;\n    background-color: rgb(0 0 0 / 0);\n    border: none;\n    padding: 0;\n    color: #333;\n    ${transition('opacity')};\n\n    &:hover {\n      opacity: 0.7;\n    }\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      width: 24px;\n      height: 24px;\n      top: 16px;\n      right: 16px;\n    }\n  }\n\n  & .container {\n    padding: 28px 16px;\n    background-color: #f1f1f1;\n    position: relative;\n    z-index: 1;\n    border-radius: 8px;\n\n    @media screen and (min-width: ${mediaSizes.tablet}) {\n      padding: 48px 32px;\n    }\n  }\n\n  & .text {\n    color: #333;\n    font-size: 30px;\n    font-weight: 300;\n  }\n`;\n","import { PropTypes } from 'prop-types';\nimport { ModalStyled } from './Modal.styled';\nimport { TfiClose } from 'react-icons/tfi';\n\nconst Modal = ({ onCloseModal, modalOpened, children }) => {\n  return (\n    <ModalStyled\n      onClick={onCloseModal}\n      className={!modalOpened ? 'is-hidden' : ''}\n    >\n      <div className=\"window\">\n        <div className=\"inner\">\n          <div className=\"container\">\n            <TfiClose onClick={onCloseModal} className=\"close\"></TfiClose>\n            <div className=\"text\">{children}</div>\n          </div>\n        </div>\n      </div>\n    </ModalStyled>\n  );\n};\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  modalOpened: PropTypes.bool.isRequired,\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport { Button } from 'components/Styled';\nimport { FormContainer } from './Form.styled';\nimport Input from './Input';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Modal from 'components/Modal/Modal';\nimport { addContact } from 'redux/contacts/operations';\n\nconst defaultFields = { name: '', number: '' };\n\nconst Form = () => {\n  const [modalMessage, setModalMessage] = useState('');\n  const [modalOpened, setModalOpened] = useState(false);\n  const [fields, setFields] = useState(defaultFields);\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const handleAddContact = ({ name, number }) => {\n    if (\n      contacts.some(contact => {\n        return contact.name.toLowerCase() === name.toLowerCase();\n      })\n    ) {\n      setModalMessage(`${name} is already in contacts.`);\n      setModalOpened(true);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setFields(fields => ({ ...fields, [name]: value }));\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    handleAddContact(fields);\n    setFields({ ...defaultFields });\n  };\n\n  const closeModal = e => {\n    if (e.target === e.currentTarget) {\n      setModalMessage('');\n      setModalOpened(false);\n    }\n  };\n\n  return (\n    <>\n      <FormContainer onSubmit={submitHandler}>\n        <Input\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={fields.name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <Input\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          value={fields.number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button type=\"submit\">Add contact</Button>\n      </FormContainer>\n      <Modal modalOpened={modalOpened} onCloseModal={closeModal}>\n        {modalMessage}\n      </Modal>\n    </>\n  );\n};\n\nexport default Form;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 300;\n  margin-top: 40px;\n`;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\nimport { transition } from 'helpers';\n\nexport const Contact = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 10px 8px 0px;\n  border-radius: 30px;\n  cursor: default;\n  ${transition('box-shadow')};\n\n  & span {\n    display: flex;\n    align-items: center;\n    margin-right: 20px;\n  }\n\n  & strong {\n    color: ${colors.default};\n    margin-left: 10px;\n  }\n\n  & span::before {\n    content: '';\n    display: block;\n    width: 10px;\n    height: 10px;\n    border-radius: 10px;\n    background-color: #838383;\n    margin-right: 20px;\n    position: relative;\n    z-index: 0;\n  }\n\n  &:hover span::before {\n    background-color: ${colors.color1};\n    animation: pulsate 1s ease-out infinite;\n  }\n\n  @keyframes pulsate {\n    0% {\n      transform: scale(0.7);\n      opacity: 1;\n    }\n    100% {\n      transform: scale(3);\n      opacity: 0;\n    }\n  }\n\n  & button {\n    flex-basis: 100px;\n    opacity: 0;\n    ${transition('transform', 'box-shadow', 'border-radius', 'opacity')};\n    margin: 0;\n  }\n\n  &:hover {\n    box-shadow: inset 0px 0px 10px 0px #ffffffb1;\n\n    & button {\n      opacity: 1;\n    }\n  }\n`;\n","import { List } from '../ContactsList/ContactsList.styled';\nimport { Button, Loader } from 'components/Styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  selectDeleteLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { Contact } from './Contact.styled';\nimport { useState } from 'react';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const [deletingId, setDeletingId] = useState();\n\n  const deleteLoading = useSelector(selectDeleteLoading);\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const handleDeleteContact = id => {\n    setDeletingId(id);\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <Contact key={id}>\n          <span>\n            {name}:<strong>{number}</strong>\n          </span>\n          {deleteLoading && deletingId === id && <Loader className=\"delete\" />}\n          {deletingId !== id && (\n            <Button onClick={() => handleDeleteContact(id)}>Delete</Button>\n          )}\n        </Contact>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\n\nexport const Message = styled.div`\n  font-size: 16px;\n  color: ${colors.color1};\n  font-weight: 400;\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from '@emotion/styled';\nimport { colors } from 'constants';\n\nexport const MessageStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n\n  & div {\n    color: #333;\n    border-radius: 5px;\n    padding: 9px 24px 7px 24px;\n    border-left: 2px solid ${colors.color2};\n    border-right: 2px solid ${colors.color2};\n    font-size: 18px;\n    background-image: repeating-linear-gradient(\n      135deg,\n      rgb(0 0 0 / 0.01),\n      rgb(0 0 0 / 0.01) 5px,\n      rgba(255, 0, 38, 0.05) 5px,\n      rgba(255, 0, 38, 0.05) 10px\n    );\n  }\n`;\n","import { MessageStyled } from './Message.styled';\n\nconst Message = ({ children }) => {\n  return (\n    <MessageStyled>\n      <div>{children}</div>\n    </MessageStyled>\n  );\n};\n\nexport default Message;\n","import { PhoneBookStyled } from './PhoneBook.styled';\nimport { Loader } from 'components/Styled';\nimport Section from 'components/Section/Section';\nimport Form from 'components/Form/Form';\nimport Input from 'components/Form/Input';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Notification from 'components/Notification/Notification';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectIsLoading,\n  selectRequested,\n} from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/filterSlice';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport Message from 'Message/Message';\n\nconst PhoneBook = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const requested = useSelector(selectRequested);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filter = useSelector(selectFilter);\n\n  const handleFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <PhoneBookStyled>\n      <Section title=\"New Contact\" type=\"form\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        {!isLoading && error && <Message>{error}</Message>}\n        {!!contacts.length && (\n          <>\n            {contacts.length > 1 && (\n              <Input\n                label=\"Find contacts by name or number\"\n                type=\"text\"\n                name=\"filter\"\n                onChange={handleFilter}\n                value={filter}\n              />\n            )}\n            <ContactsList />\n          </>\n        )}\n        {requested && !isLoading && !error && !contacts.length && (\n          <Notification message=\"There is no contacts yet\" />\n        )}\n        {isLoading && !error && <Loader />}\n      </Section>\n    </PhoneBookStyled>\n  );\n};\n\nexport default PhoneBook;\n","import PhoneBook from 'components/PhoneBook/PhoneBook';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <PhoneBook />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormContainer","styled","Label","Title","InputStyled","transition","props","type","name","value","onChange","pattern","title","required","label","PhoneBookStyled","mediaSizes","SectionContainer","children","className","selectContacts","state","contacts","items","selectRequested","requested","selectIsLoading","isLoading","selectDeleteLoading","deleteLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","number","toLowerCase","includes","ModalStyled","ishidden","onCloseModal","modalOpened","onClick","defaultFields","useState","modalMessage","setModalMessage","setModalOpened","fields","setFields","dispatch","useDispatch","useSelector","handleInputChange","e","target","onSubmit","preventDefault","some","contact","addContact","handleAddContact","Input","currentTarget","List","Contact","colors","deletingId","setDeletingId","visibleContacts","map","id","deleteContact","handleDeleteContact","Message","message","MessageStyled","useEffect","fetchContacts","length","setFilter"],"sourceRoot":""}